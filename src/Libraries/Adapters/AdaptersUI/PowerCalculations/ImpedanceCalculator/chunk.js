"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[752],{2752:(e,t,a)=>{a.r(t),a.d(t,{default:()=>v});var n=a(6904),l=a(2580),r=a(54840);const i={ApplyLineToLineAdjustment:{Value:!0,Description:"Defines flag that determines if line-to-line adjustment should be applied."},BadDataStrategy:{Value:"FlagAsBad",Description:""},Currents:{Value:[],Description:"Defines the Current Magnitude to be used.",Parse:e=>null==e?[]:""===e?[""]:e.split(";"),Construct:e=>0===(null==e?void 0:e.length)?null:null==e?void 0:e.join(";")},Voltages:{Value:[],Description:"Defines the Voltage Magnitude to be used. If not supplied the system will use Primary or Secondary Voltage associated with the Current Phasor.",Parse:e=>null==e?[]:""===e?[""]:e.split(";"),Construct:e=>0===(null==e?void 0:e.length)?null:null==e?void 0:e.join(";")},Resistance:{Value:"",Description:"Defines flag that determines if adapter should produce a rectangular resistance result (Ohm)."},Reactance:{Value:"",Description:"Defines flag that determines if adapter should produce a rectangular reactance result (Ohm)."},Conductance:{Value:"",Description:"Defines flag that determines if adapter should produce a rectangular conductance result (Mho)."},Susceptance:{Value:"",Description:"Defines flag that determines if adapter should produce a rectangular susceptance result (Mho)."},LineImpedance:{Value:"",Description:"Defines flag that determines if adapter should produce a polar line impedance result (Ohm)."},LineImpedanceAngle:{Value:"",Description:"Defines flag that determines if adapter should produce a polar line impedance angle result (degrees)."},LineAdmittance:{Value:"",Description:"Defines flag that determines if adapter should produce a polar line admittance result (Ohm)."},LineAdmittanceAngle:{Value:"",Description:"Defines flag that determines if adapter should produce a polar line admittance angle result (degrees)."}},s=["Resistance","Reactance","Conductance","Susceptance","LineImpedance","LineImpedanceAngle","LineAdmittance","LineAdmittanceAngle"],c={Resistance:"Resistance",Reactance:"Reactance",Conductance:"Conductance",Susceptance:"Susceptance",LineImpedance:"Line Impedance",LineImpedanceAngle:"Line Impedance Angle",LineAdmittance:"Line Admittance",LineAdmittanceAngle:"Line Admittance Angle"},o=(e,t,a)=>t.Search({dataTypeIndex:r.Grafana.DataTypeIndex.Phasor,expression:`SELECT MagnitudePointTag, AnglePointTag FROM PhasorValues WHERE MagnitudePointTag LIKE '%${e}%' OR AnglePointTag LIKE '%${e}%' AND Type = '${a?"I":"V"}'`}).then((e=>{const t=[];return e.forEach((e=>{const[a,n]=e.split(",");t.push({Label:a,Value:a}),t.push({Label:n,Value:n})})),t}));var d=a(32098),u=a.n(d),m=a(55476),g=a(24334),p=a(28188),h=a(94194);const f="MM/DD/YYYY HH:mm:ss.SSS",S={Currents:{Value:[],Description:"Defines the Current Magnitude to be used.",Parse:e=>null==e?[]:""===e?[""]:e.split(";"),Construct:e=>0===(null==e?void 0:e.length)?null:null==e?void 0:e.join(";")},Voltages:{Value:[],Description:"Defines the Voltage Magnitude to be used. If not supplied the system will use Primary or Secondary Voltage associated with the Current Phasor.",Parse:e=>null==e?[]:""===e?[""]:e.split(";"),Construct:e=>0===(null==e?void 0:e.length)?null:null==e?void 0:e.join(";")}},y=e=>[{refID:"A",target:`Filter PhasorValues Where ${e.map((e=>`(AnglePointTag = '${e}' OR MagnitudePointTag = '${e}')`)).join(" OR ")}`,metadataSelections:[]}],v={Settings:e=>{var t,a,d,u,m,g,p,h,f,S,y,v,E,C;const V=n.useMemo((()=>new r.GrafanaQueryFunctions(`${e.HomePath}api/Grafana`)),[e.HomePath]),[A,D]=n.useState(!0),L=n.useMemo((()=>r.AdapterHelperFuncs.parseConnectionString(e.ConnectionString,i)),[e.ConnectionString]);r.AdapterHelperFuncs.useSetInitialConnectionString(e.ConnectionString,e.SetConnectionString,i,L),r.AdapterHelperFuncs.useSetDefaultSettings(i,e.SetDefaultSettings),n.useEffect((()=>{var e;null!=L&&(0===(null===(e=L.Voltages)||void 0===e?void 0:e.length)?D(!0):D(!1))}),[null==L?void 0:L.Voltages]);const b=n.useCallback((t=>{const a=r.AdapterHelperFuncs.constructConnectionString(t,i);a!==e.ConnectionString&&e.SetConnectionString(a)}),[e.ConnectionString]),w=n.useCallback(((e,t)=>{var a,n;const l=t?[e,null!==(a=L.Currents[1])&&void 0!==a?a:""]:[null!==(n=L.Currents[0])&&void 0!==n?n:"",e];b(Object.assign(Object.assign({},L),{Currents:l}))}),[L,b]),N=n.useCallback(((e,t)=>{var a,n;const l=t?[e,null!==(a=L.Voltages[1])&&void 0!==a?a:""]:[null!==(n=L.Voltages[0])&&void 0!==n?n:"",e];b(Object.assign(Object.assign({},L),{Voltages:l}))}),[L,b]),x=n.useCallback(((e,t)=>{const a=Object.assign(Object.assign({},L),{[t]:e});b(a)}),[L,b]),I=n.useCallback((e=>{D(e.AutoMapVoltages),e.AutoMapVoltages&&b(Object.assign(Object.assign({},L),{Voltages:[]}))}),[L,b]);return null==L?n.createElement(n.Fragment,null):n.createElement("div",{className:"container-fluid d-flex flex-column h-100 p-0"},n.createElement("div",{className:"row"},n.createElement("div",{className:"col-12"},n.createElement(l.Select,{Record:L,Field:"BadDataStrategy",Label:"Bad Data Strategy",Setter:b,Options:r.AdapterOptions.BadDataStrategyOptions,Help:i.BadDataStrategy.Description}))),n.createElement("div",{className:"row"},n.createElement("div",{className:"col-12"},n.createElement(l.ToggleSwitch,{Record:L,Field:"ApplyLineToLineAdjustment",Label:"Apply L-L Adjustment",Setter:b,Help:i.ApplyLineToLineAdjustment.Description}))),n.createElement("div",{className:"row"},n.createElement("div",{className:"col-12"},n.createElement(l.ToggleSwitch,{Record:{AutoMapVoltages:A},Field:"AutoMapVoltages",Setter:I,Label:"Auto Map Voltages",Help:"Flag to enable system to use Primary or Secondary Voltage associated of the Current Phasor."}))),n.createElement("div",{className:"row mb-3"},n.createElement("div",{className:"col-12"},n.createElement("fieldset",{className:"border",style:{padding:"10px"}},n.createElement("legend",{className:"w-auto pr-2",style:{fontSize:"large"}},"Phase Pair 1"),n.createElement("div",{className:"row"},n.createElement("div",{className:"col-6"},n.createElement(l.SearchableSelect,{Record:{Value:null!==(a=null===(t=L.Currents)||void 0===t?void 0:t[0])&&void 0!==a?a:""},Field:"Value",Label:"Current",Setter:e=>w(e.Value,!0),AllowCustom:!1,Search:e=>o(e,V,!0),Style:{width:"100%"},BtnStyle:{display:"flex",paddingLeft:0,alignItems:"center"}})),n.createElement("div",{className:"col-6"},n.createElement(l.SearchableSelect,{Record:{Value:null!==(u=null===(d=L.Voltages)||void 0===d?void 0:d[0])&&void 0!==u?u:""},Field:"Value",Label:"Voltage",Setter:e=>N(e.Value,!0),AllowCustom:!1,Search:e=>o(e,V,!0),Style:{width:"100%"},BtnStyle:{display:"flex",paddingLeft:0,alignItems:"center"},Disabled:A||0===(null!==(g=null===(m=L.Currents)||void 0===m?void 0:m.length)&&void 0!==g?g:0)})))))),n.createElement("div",{className:"row mb-3"},n.createElement("div",{className:"col-12"},n.createElement("fieldset",{className:"border",style:{padding:"10px"}},n.createElement("legend",{className:"w-auto pr-2",style:{fontSize:"large"}},"Phase Pair 2"),n.createElement("div",{className:"row"},n.createElement("div",{className:"col-6"},n.createElement(l.SearchableSelect,{Record:{Value:null!==(h=null===(p=L.Currents)||void 0===p?void 0:p[1])&&void 0!==h?h:""},Field:"Value",Label:"Current",Setter:e=>w(e.Value,!1),AllowCustom:!1,Search:e=>o(e,V,!0),Style:{width:"100%"},BtnStyle:{display:"flex",paddingLeft:0,alignItems:"center"},Disabled:0===(null!==(S=null===(f=L.Currents)||void 0===f?void 0:f.length)&&void 0!==S?S:0)})),n.createElement("div",{className:"col-6"},n.createElement(l.SearchableSelect,{Record:{Value:null!==(v=null===(y=L.Voltages)||void 0===y?void 0:y[1])&&void 0!==v?v:""},Field:"Value",Label:"Voltage",Setter:e=>N(e.Value,!1),AllowCustom:!1,Search:e=>o(e,V,!1),Style:{width:"100%"},BtnStyle:{display:"flex",paddingLeft:0,alignItems:"center"},Disabled:A||0===(null!==(C=null===(E=L.Currents)||void 0===E?void 0:E.length)&&void 0!==C?C:0)})))))),n.createElement("div",{className:"row"},n.createElement("div",{className:"col-12"},n.createElement("fieldset",{className:"border",style:{padding:"10px"}},n.createElement("legend",{className:"w-auto pr-2",style:{fontSize:"large"}},"Outputs"),s.map(((t,a)=>{const i=L[t];return n.createElement("div",{className:"row mb-2 align-items-center",key:t},n.createElement("div",{className:"col-12"},n.createElement(l.SearchableSelect,{Record:{Measurement:i},Field:"Measurement",Label:c[t],Setter:e=>x(e.Measurement,t),AllowCustom:!1,Search:t=>(0,r.handleMeasurementSearch)(t,`${e.HomePath}api/grafana`),Style:{width:"100%"},BtnStyle:{display:"flex",paddingLeft:0,alignItems:"center"}})))}))))))},Input:e=>{const t=`${e.HomePath}api/grafana`,a=n.useRef(null),{width:l}=(0,g.useGetContainerPosition)(a),i=(0,r.useGetLegendWidth)(l),{Currents:s,Voltages:c}=n.useMemo((()=>r.AdapterHelperFuncs.parseConnectionString(e.ConnectionString,S)),[e.ConnectionString]),[o,d]=n.useState({start:u().utc().subtract(e.Settings.DefaultDuration,"seconds").format(f).toString(),end:u().utc().format(f).toString()}),v=n.useMemo((()=>y(null!=s?s:[])),[s]),E=n.useMemo((()=>y(null!=c?c:[])),[c]),{Data:C,Status:V}=(0,r.useGrafanaQuery)(v,u().utc(o.start).toISOString(),u().utc(o.end).toISOString(),t,r.Grafana.DataTypeIndex.Phasor),{Data:A,Status:D}=(0,r.useGrafanaQuery)(E,u().utc(o.start).toISOString(),u().utc(o.end).toISOString(),t,r.Grafana.DataTypeIndex.Phasor),[L,b]=n.useState(0);return n.useEffect((()=>{const e=[...A,...C],t=setInterval((()=>{b((t=>{if(0===e.length||0===e[0].datapoints.length)return t;const a=Math.min(...e.map((e=>e.datapoints.length)));return 0===a?0:(t+1)%a}))}),5e3);return()=>clearInterval(t)}),[A,C]),n.createElement(n.Fragment,null,n.createElement("div",{className:"container-fluid d-flex flex-column h-100 p-0"},n.createElement("div",{className:"row m-0 pb-3"},n.createElement("div",{className:"col-12 p-0"},n.createElement(m.TimeFilter,{filter:o,setFilter:(e,t)=>d({start:e,end:t}),showQuickSelect:!0,isHorizontal:!0,dateTimeSetting:e.Settings.DateTimeSetting,timeZone:"UTC",format:"datetime-local",accuracy:"millisecond",showHelpMessage:!1}))),"loading"===V||"loading"===D?n.createElement("div",{className:"row m-0"},n.createElement("div",{className:"col-12 p-0 d-flex flex-column align-items-center justify-content-center"},n.createElement(h.ReactIcons.SpiningIcon,{Size:200}))):n.createElement(n.Fragment,null,n.createElement("div",{className:"row m-0"},n.createElement("div",{className:"col-9 p-0",ref:a},n.createElement(p.Kl,{defaultTdomain:[u().utc(o.start,f).valueOf(),u().utc(o.end,f).valueOf()],height:200,width:l,Ylabel:"Voltage (Mag)",legend:"right",yDomain:"AutoValue",Tlabel:"Time",useMetricFactors:!1,legendWidth:i,showDateOnTimeAxis:!0},A.map(((e,t)=>n.createElement(p.N1,{key:t,data:e.datapoints.map((e=>[e[2],e[0]])),color:(0,r.getColor)(t),lineStyle:"-",legend:e.target}))))),n.createElement("div",{className:"col-3 p-0 d-flex justify-content-center align-items-center"},n.createElement("svg",{width:"140",height:"140",viewBox:"0 0 140 140",style:{display:"block",marginTop:"8px"}},n.createElement("circle",{style:{fill:"none",stroke:"currentColor"},cx:70,cy:70,r:65}),n.createElement("circle",{style:{fill:"none",stroke:"currentColor"},cx:70,cy:70,r:35}),n.createElement("line",{style:{stroke:"currentColor"},x1:70,y1:0,x2:70,y2:140}),n.createElement("line",{style:{stroke:"currentColor"},x1:0,y1:70,x2:140,y2:70}),n.createElement("g",null,A.map(((e,t)=>0!==e.datapoints.length&&n.createElement("path",{key:t,style:{fill:(0,r.getColor)(t),stroke:(0,r.getColor)(t)},d:"M 70 70 L 70 0 L 65 10 L 75 10 L 70 0",transform:`rotate(${e.datapoints[0][1]} 70 70)`}))))))),n.createElement("div",{className:"row m-0"},n.createElement("div",{className:"col-9 p-0"},n.createElement(p.Kl,{defaultTdomain:[u().utc(o.start,f).valueOf(),u().utc(o.end,f).valueOf()],height:250,width:l,Ylabel:"Current (Mag)",legend:"right",yDomain:"AutoValue",Tlabel:"Time",useMetricFactors:!1,legendWidth:i,showDateOnTimeAxis:!0},C.map(((e,t)=>n.createElement(p.N1,{key:t,data:e.datapoints.map((e=>[e[2],e[0]])),color:(0,r.getColor)(t),lineStyle:"-",legend:e.target}))))),n.createElement("div",{className:"col-3 p-0 d-flex justify-content-center align-items-center"},n.createElement("svg",{width:"140",height:"140",viewBox:"0 0 140 140",style:{display:"block",marginTop:"8px"}},n.createElement("circle",{style:{fill:"none",stroke:"currentColor"},cx:70,cy:70,r:65}),n.createElement("circle",{style:{fill:"none",stroke:"currentColor"},cx:70,cy:70,r:35}),n.createElement("line",{style:{stroke:"currentColor"},x1:70,y1:0,x2:70,y2:140}),n.createElement("line",{style:{stroke:"currentColor"},x1:0,y1:70,x2:140,y2:70}),n.createElement("g",null,C.map(((e,t)=>0!==e.datapoints.length&&n.createElement("path",{key:t,style:{fill:(0,r.getColor)(t),stroke:(0,r.getColor)(t)},d:"M 70 70 L 70 0 L 65 10 L 75 10 L 70 0",transform:`rotate(${e.datapoints[L][1]} 70 70)`}))))))))))},Output:e=>{const{Resistance:t,Reactance:a,Conductance:l,Susceptance:i,LineImpedance:s,LineImpedanceAngle:c,LineAdmittance:o,LineAdmittanceAngle:d}=r.AdapterHelperFuncs.parseConnectionString(e.ConnectionString),u=[t,a,l,i,s,c,o,d].filter((e=>null!=e&&""!==e)).join("; ");return n.createElement(r.DefaultAdapterOutput,Object.assign({},e,{Outputs:u}))}}}}]);